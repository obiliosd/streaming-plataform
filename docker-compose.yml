version: "3"
services:
# *******************************************************
# **************  GENERATE DATA INGEST ******************
# *******************************************************
  generate-data:
    build: ./appGenerateData
    container_name: generate-data
    depends_on:
      - nifi
    links:
      - nifi
    environment:
      - LISTENER_URL=http://nifi:9092/contentListener
      - DATA_PATH=../data/bcn.json
      - NUM_RAIDER=50
    volumes:
      - ./appGenerateData/src:/src
# *******************************************************
# ************************  NIFI ************************
# *******************************************************
  nifi:
    container_name: nifi
    image: apache/nifi:1.13.2
    ports:
      - 12011:8800
      - 12012:9092
    depends_on:
      - namenode
      - datanode
      - broker
    environment:
      - NIFI_WEB_HTTP_PORT=8800
    volumes:
      - nifi_content_repository:/opt/nifi/nifi-current/content_repository
      - nifi_database_repository:/opt/nifi/nifi-current/database_repository
      - nifi_flowfile_repository:/opt/nifi/nifi-current/flowfile_repository
      - nifi_provenance_repository:/opt/nifi/nifi-current/provenance_repository
      - nifi_conf:/opt/nifi/nifi-current/conf
      - nifi_state:/opt/nifi/nifi-current/state
      - nifi_logs:/opt/nifi/nifi-current/logs
      - nifi_data:/opt/nifi/nifi-current/data
# *******************************************************
# ************************  KAFKA ***********************
# *******************************************************
  zookeeper:
    image: confluentinc/cp-zookeeper:6.2.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-server:6.2.0
    hostname: broker
    container_name: broker
    ports:
      - "12013:9092"
      - "12014:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:12013
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker:29092
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'true'
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'

  schema-registry:
    image: confluentinc/cp-schema-registry:6.2.0
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - broker
    ports:
      - "12015:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'broker:29092'
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081

  control-center:
    image: confluentinc/cp-enterprise-control-center:6.2.0
    hostname: control-center
    container_name: control-center
    depends_on:
      - broker
      - schema-registry
    ports:
      - "12017:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'broker:29092'
      CONTROL_CENTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      PORT: 9021
# *******************************************************
# ************************  HADOOP **********************
# *******************************************************
  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: namenode
    ports:
      - 12021:9870
    environment:
      - CLUSTER_NAME=test
      - CORE_CONF_fs_defaultFS=hdfs://namenode:8020
    healthcheck:
      interval: 5s
      retries: 100
    volumes:
      - hadoop_namenode:/hadoop/dfs/name

  datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode
    depends_on:
      namenode:
        condition: service_healthy
    environment:
      - CORE_CONF_fs_defaultFS=hdfs://namenode:8020
    healthcheck:
      interval: 5s
      retries: 100
    volumes:
      - hadoop_datanode:/hadoop/dfs/data
# *******************************************************
# ************************  SPARK ***********************
# *******************************************************
  spark-master:
    image: bde2020/spark-master:3.1.1-hadoop3.2
    container_name: spark-master
    ports:
      - "8080:8080"
      - "7077:7077"
    depends_on:
      - namenode
      - datanode
    environment:
      - INIT_DAEMON_STEP=setup_spark
      - CORE_CONF_fs_defaultFS=hdfs://namenode:8020

  spark-worker:
    image: obiliosd/spark-worker:3.1.1-hadoop3.2
    container_name: spark-worker
    depends_on:
      - spark-master
    environment:
      - CORE_CONF_fs_defaultFS=hdfs://namenode:8020
      - "SPARK_MASTER=spark://spark-master:7077"
# *******************************************************
# ************************  SPARK-ML ********************
# *******************************************************
  spark-ml:
    build: ./appSparkML
    container_name: spark-ml
    depends_on:
      - spark-master
      - spark-worker
    environment:
      - ENABLE_INIT_DAEMON=false
      - "SPARK_MASTER=spark://spark-master:7077"
    volumes:
      - ./appSparkML/src:/app/src
# *******************************************************
# ************************  SPARK-STREAMING *************
# *******************************************************
  spark-stream:
    build: ./appSparkStreaming
    container_name: spark-stream
    depends_on:
      - spark-master
      - spark-worker
      - broker
    environment:
      - ENABLE_INIT_DAEMON=false
      - "SPARK_MASTER=spark://spark-master:7077"
    volumes:
      - ./appSparkStreaming/src:/app/src

volumes:
  hadoop_namenode:
  hadoop_datanode:
  nifi_content_repository:
  nifi_database_repository:
  nifi_flowfile_repository:
  nifi_provenance_repository:
  nifi_conf:
  nifi_state:
  nifi_logs:
  nifi_data: